namespace ConvertHexStringToByteArray.Library;

public static class LookupTables
{
    private static readonly Dictionary<uint, byte> LookupDict = new()
    {
        {3145776U, 0}, {3145777U, 16}, {3145778U, 32}, {3145779U, 48}, {3145780U, 64}, {3145781U, 80},
        {3145782U, 96}, {3145783U, 112}, {3145784U, 128}, {3145785U, 144}, {3145793U, 160}, {3145794U, 176},
        {3145795U, 192}, {3145796U, 208}, {3145797U, 224}, {3145798U, 240}, {3145825U, 160}, {3145826U, 176},
        {3145827U, 192}, {3145828U, 208}, {3145829U, 224}, {3145830U, 240}, {3211312U, 1}, {3211313U, 17},
        {3211314U, 33}, {3211315U, 49}, {3211316U, 65}, {3211317U, 81}, {3211318U, 97}, {3211319U, 113},
        {3211320U, 129}, {3211321U, 145}, {3211329U, 161}, {3211330U, 177}, {3211331U, 193}, {3211332U, 209},
        {3211333U, 225}, {3211334U, 241}, {3211361U, 161}, {3211362U, 177}, {3211363U, 193}, {3211364U, 209},
        {3211365U, 225}, {3211366U, 241}, {3276848U, 2}, {3276849U, 18}, {3276850U, 34}, {3276851U, 50},
        {3276852U, 66}, {3276853U, 82}, {3276854U, 98}, {3276855U, 114}, {3276856U, 130}, {3276857U, 146},
        {3276865U, 162}, {3276866U, 178}, {3276867U, 194}, {3276868U, 210}, {3276869U, 226}, {3276870U, 242},
        {3276897U, 162}, {3276898U, 178}, {3276899U, 194}, {3276900U, 210}, {3276901U, 226}, {3276902U, 242},
        {3342384U, 3}, {3342385U, 19}, {3342386U, 35}, {3342387U, 51}, {3342388U, 67}, {3342389U, 83},
        {3342390U, 99}, {3342391U, 115}, {3342392U, 131}, {3342393U, 147}, {3342401U, 163}, {3342402U, 179},
        {3342403U, 195}, {3342404U, 211}, {3342405U, 227}, {3342406U, 243}, {3342433U, 163}, {3342434U, 179},
        {3342435U, 195}, {3342436U, 211}, {3342437U, 227}, {3342438U, 243}, {3407920U, 4}, {3407921U, 20},
        {3407922U, 36}, {3407923U, 52}, {3407924U, 68}, {3407925U, 84}, {3407926U, 100}, {3407927U, 116},
        {3407928U, 132}, {3407929U, 148}, {3407937U, 164}, {3407938U, 180}, {3407939U, 196}, {3407940U, 212},
        {3407941U, 228}, {3407942U, 244}, {3407969U, 164}, {3407970U, 180}, {3407971U, 196}, {3407972U, 212},
        {3407973U, 228}, {3407974U, 244}, {3473456U, 5}, {3473457U, 21}, {3473458U, 37}, {3473459U, 53},
        {3473460U, 69}, {3473461U, 85}, {3473462U, 101}, {3473463U, 117}, {3473464U, 133}, {3473465U, 149},
        {3473473U, 165}, {3473474U, 181}, {3473475U, 197}, {3473476U, 213}, {3473477U, 229}, {3473478U, 245},
        {3473505U, 165}, {3473506U, 181}, {3473507U, 197}, {3473508U, 213}, {3473509U, 229}, {3473510U, 245},
        {3538992U, 6}, {3538993U, 22}, {3538994U, 38}, {3538995U, 54}, {3538996U, 70}, {3538997U, 86},
        {3538998U, 102}, {3538999U, 118}, {3539000U, 134}, {3539001U, 150}, {3539009U, 166}, {3539010U, 182},
        {3539011U, 198}, {3539012U, 214}, {3539013U, 230}, {3539014U, 246}, {3539041U, 166}, {3539042U, 182},
        {3539043U, 198}, {3539044U, 214}, {3539045U, 230}, {3539046U, 246}, {3604528U, 7}, {3604529U, 23},
        {3604530U, 39}, {3604531U, 55}, {3604532U, 71}, {3604533U, 87}, {3604534U, 103}, {3604535U, 119},
        {3604536U, 135}, {3604537U, 151}, {3604545U, 167}, {3604546U, 183}, {3604547U, 199}, {3604548U, 215},
        {3604549U, 231}, {3604550U, 247}, {3604577U, 167}, {3604578U, 183}, {3604579U, 199}, {3604580U, 215},
        {3604581U, 231}, {3604582U, 247}, {3670064U, 8}, {3670065U, 24}, {3670066U, 40}, {3670067U, 56},
        {3670068U, 72}, {3670069U, 88}, {3670070U, 104}, {3670071U, 120}, {3670072U, 136}, {3670073U, 152},
        {3670081U, 168}, {3670082U, 184}, {3670083U, 200}, {3670084U, 216}, {3670085U, 232}, {3670086U, 248},
        {3670113U, 168}, {3670114U, 184}, {3670115U, 200}, {3670116U, 216}, {3670117U, 232}, {3670118U, 248},
        {3735600U, 9}, {3735601U, 25}, {3735602U, 41}, {3735603U, 57}, {3735604U, 73}, {3735605U, 89},
        {3735606U, 105}, {3735607U, 121}, {3735608U, 137}, {3735609U, 153}, {3735617U, 169}, {3735618U, 185},
        {3735619U, 201}, {3735620U, 217}, {3735621U, 233}, {3735622U, 249}, {3735649U, 169}, {3735650U, 185},
        {3735651U, 201}, {3735652U, 217}, {3735653U, 233}, {3735654U, 249}, {4259888U, 10}, {4259889U, 26},
        {4259890U, 42}, {4259891U, 58}, {4259892U, 74}, {4259893U, 90}, {4259894U, 106}, {4259895U, 122},
        {4259896U, 138}, {4259897U, 154}, {4259905U, 170}, {4259906U, 186}, {4259907U, 202}, {4259908U, 218},
        {4259909U, 234}, {4259910U, 250}, {4325424U, 11}, {4325425U, 27}, {4325426U, 43}, {4325427U, 59},
        {4325428U, 75}, {4325429U, 91}, {4325430U, 107}, {4325431U, 123}, {4325432U, 139}, {4325433U, 155},
        {4325441U, 171}, {4325442U, 187}, {4325443U, 203}, {4325444U, 219}, {4325445U, 235}, {4325446U, 251},
        {4390960U, 12}, {4390961U, 28}, {4390962U, 44}, {4390963U, 60}, {4390964U, 76}, {4390965U, 92},
        {4390966U, 108}, {4390967U, 124}, {4390968U, 140}, {4390969U, 156}, {4390977U, 172}, {4390978U, 188},
        {4390979U, 204}, {4390980U, 220}, {4390981U, 236}, {4390982U, 252}, {4456496U, 13}, {4456497U, 29},
        {4456498U, 45}, {4456499U, 61}, {4456500U, 77}, {4456501U, 93}, {4456502U, 109}, {4456503U, 125},
        {4456504U, 141}, {4456505U, 157}, {4456513U, 173}, {4456514U, 189}, {4456515U, 205}, {4456516U, 221},
        {4456517U, 237}, {4456518U, 253}, {4522032U, 14}, {4522033U, 30}, {4522034U, 46}, {4522035U, 62},
        {4522036U, 78}, {4522037U, 94}, {4522038U, 110}, {4522039U, 126}, {4522040U, 142}, {4522041U, 158},
        {4522049U, 174}, {4522050U, 190}, {4522051U, 206}, {4522052U, 222}, {4522053U, 238}, {4522054U, 254},
        {4587568U, 15}, {4587569U, 31}, {4587570U, 47}, {4587571U, 63}, {4587572U, 79}, {4587573U, 95},
        {4587574U, 111}, {4587575U, 127}, {4587576U, 143}, {4587577U, 159}, {4587585U, 175}, {4587586U, 191},
        {4587587U, 207}, {4587588U, 223}, {4587589U, 239}, {4587590U, 255}, {6357040U, 10}, {6357041U, 26},
        {6357042U, 42}, {6357043U, 58}, {6357044U, 74}, {6357045U, 90}, {6357046U, 106}, {6357047U, 122},
        {6357048U, 138}, {6357049U, 154}, {6357089U, 170}, {6357090U, 186}, {6357091U, 202}, {6357092U, 218},
        {6357093U, 234}, {6357094U, 250}, {6422576U, 11}, {6422577U, 27}, {6422578U, 43}, {6422579U, 59},
        {6422580U, 75}, {6422581U, 91}, {6422582U, 107}, {6422583U, 123}, {6422584U, 139}, {6422585U, 155},
        {6422625U, 171}, {6422626U, 187}, {6422627U, 203}, {6422628U, 219}, {6422629U, 235}, {6422630U, 251},
        {6488112U, 12}, {6488113U, 28}, {6488114U, 44}, {6488115U, 60}, {6488116U, 76}, {6488117U, 92},
        {6488118U, 108}, {6488119U, 124}, {6488120U, 140}, {6488121U, 156}, {6488161U, 172}, {6488162U, 188},
        {6488163U, 204}, {6488164U, 220}, {6488165U, 236}, {6488166U, 252}, {6553648U, 13}, {6553649U, 29},
        {6553650U, 45}, {6553651U, 61}, {6553652U, 77}, {6553653U, 93}, {6553654U, 109}, {6553655U, 125},
        {6553656U, 141}, {6553657U, 157}, {6553697U, 173}, {6553698U, 189}, {6553699U, 205}, {6553700U, 221},
        {6553701U, 237}, {6553702U, 253}, {6619184U, 14}, {6619185U, 30}, {6619186U, 46}, {6619187U, 62},
        {6619188U, 78}, {6619189U, 94}, {6619190U, 110}, {6619191U, 126}, {6619192U, 142}, {6619193U, 158},
        {6619233U, 174}, {6619234U, 190}, {6619235U, 206}, {6619236U, 222}, {6619237U, 238}, {6619238U, 254},
        {6684720U, 15}, {6684721U, 31}, {6684722U, 47}, {6684723U, 63}, {6684724U, 79}, {6684725U, 95},
        {6684726U, 111}, {6684727U, 127}, {6684728U, 143}, {6684729U, 159}, {6684769U, 175}, {6684770U, 191},
        {6684771U, 207}, {6684772U, 223}, {6684773U, 239}, {6684774U, 255}
    };

    internal static ReadOnlySpan<byte> FromHexLowBitsLookup => new byte[]
    {
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 0, 1,
        2, 3, 4, 5, 6, 7, 8, 9, 255, 255,
        255, 255, 255, 255, 255, 10, 11, 12, 13, 14,
        15, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 10, 11, 12,
        13, 14, 15
    };

    internal static ReadOnlySpan<byte> FromHexHighBitsLookup => new byte[]
    {
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 0, 16,
        32, 48, 64, 80, 96, 112, 128, 144, 255, 255,
        255, 255, 255, 255, 255, 160, 176, 192, 208, 224,
        240, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 160, 176, 192,
        208, 224, 240
    };

    public static IReadOnlyDictionary<uint, byte> LookupDictionaryLittleEndian => LookupDict;

    public static (byte[] lowBits, byte[] highBits) CreateLookups()
    {
        const string hexValues = "0123456789ABCDEFabcdef";

        var lowBits = GC.AllocateUninitializedArray<byte>('f' + 1);
        var highBits = GC.AllocateUninitializedArray<byte>('f' + 1);
        Array.Fill(lowBits, (byte) 255);
        Array.Fill(highBits, (byte) 255);

        foreach (var c in hexValues.AsSpan())
        {
            var value = ConversionHelpers.ComputeNibbleFromHexChar(c);
            lowBits[c] = value;
            highBits[c] = (byte) (value << 4);
        }

        return (lowBits, highBits);
    }
}