// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;

namespace EFCorePowerToolsExample.Data
{
    public partial class DBContext
    {
        private IDBContextProcedures _procedures;

        public virtual IDBContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new DBContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IDBContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
        }
    }

    public partial class DBContextProcedures : IDBContextProcedures
    {
        private readonly DBContext _context;

        public DBContextProcedures(DBContext context)
        {
            _context = context;
        }

        public virtual async Task<int> CountBooksInCategory_SPAsync(int? CategoryID, OutputParameter<int?> BookCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterBookCount = new SqlParameter
            {
                ParameterName = "BookCount",
                Direction = System.Data.ParameterDirection.InputOutput,
                Value = BookCount?._value ?? Convert.DBNull,
                SqlDbType = System.Data.SqlDbType.Int,
            };
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "CategoryID",
                    Value = CategoryID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterBookCount,
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[CountBooksInCategory_SP] @CategoryID, @BookCount OUTPUT", sqlParameters, cancellationToken);

            BookCount.SetValue(parameterBookCount.Value);
            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
