// <auto-generated />
using System;
using EFCoreBulkUpdate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreBulkUpdate.Migrations
{
    [DbContext(typeof(TeamDBContext))]
    partial class TeamDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opponent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Games");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearFounded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Organizer", b =>
                {
                    b.HasBaseType("EFCoreBulkUpdate.Model.Employee");

                    b.Property<int>("NoOfEventsOrganized")
                        .HasColumnType("int");

                    b.Property<string>("OrganizerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Organizers", (string)null);
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Referee", b =>
                {
                    b.HasBaseType("EFCoreBulkUpdate.Model.Employee");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefereeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Referees", (string)null);
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.BasketballGame", b =>
                {
                    b.HasBaseType("EFCoreBulkUpdate.Model.Game");

                    b.Property<int>("Quarter1Score")
                        .HasColumnType("int");

                    b.Property<int>("Quarter2Score")
                        .HasColumnType("int");

                    b.Property<int>("Quarter3Score")
                        .HasColumnType("int");

                    b.Property<int>("Quarter4Score")
                        .HasColumnType("int");

                    b.ToTable("BasketballGames", (string)null);
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.FootballGame", b =>
                {
                    b.HasBaseType("EFCoreBulkUpdate.Model.Game");

                    b.Property<int>("FirstHalfTimeScore")
                        .HasColumnType("int");

                    b.Property<int>("SecondHalfTimeScore")
                        .HasColumnType("int");

                    b.ToTable("FootballGames", (string)null);
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Game", b =>
                {
                    b.HasOne("EFCoreBulkUpdate.Model.Team", "Team")
                        .WithMany("Games")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Player", b =>
                {
                    b.HasOne("EFCoreBulkUpdate.Model.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.BasketballGame", b =>
                {
                    b.HasOne("EFCoreBulkUpdate.Model.Game", null)
                        .WithOne()
                        .HasForeignKey("EFCoreBulkUpdate.Model.BasketballGame", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.FootballGame", b =>
                {
                    b.HasOne("EFCoreBulkUpdate.Model.Game", null)
                        .WithOne()
                        .HasForeignKey("EFCoreBulkUpdate.Model.FootballGame", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreBulkUpdate.Model.Team", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
