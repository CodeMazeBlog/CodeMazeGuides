// <auto-generated />
using System;
using EFCoreJsonInEntityField;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreJsonInEntityField.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20230405094905_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreJsonInEntityField.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCoreJsonInEntityField.Models.Order", b =>
                {
                    b.OwnsOne("ShippingInfo", "ShippingInfo", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.ToJson("ShippingInfo");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsMany("Delivery", "Deliveries", b2 =>
                                {
                                    b2.Property<Guid>("ShippingInfoOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<DateTime>("DeliveryDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("ReceiverName")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Signature")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.OwnsMany("Shipment", "Shipments", b2 =>
                                {
                                    b2.Property<Guid>("ShippingInfoOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<string>("Carrier")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("ShipDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("TrackingNumber")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.Navigation("Deliveries");

                            b1.Navigation("Shipments");
                        });

                    b.Navigation("ShippingInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
