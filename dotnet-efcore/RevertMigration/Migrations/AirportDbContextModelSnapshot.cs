// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RevertMigration.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    partial class AirportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HangarId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxAirSpeed")
                        .HasColumnType("REAL");

                    b.Property<int>("NumberOfEngines")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RunsOnJetFuel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TailNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HangarId");

                    b.ToTable("Airplanes", (string)null);
                });

            modelBuilder.Entity("Hangar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HangarNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hangars", (string)null);
                });

            modelBuilder.Entity("Airplane", b =>
                {
                    b.HasOne("Hangar", "Hangar")
                        .WithMany("Airplanes")
                        .HasForeignKey("HangarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hangar");
                });

            modelBuilder.Entity("Hangar", b =>
                {
                    b.Navigation("Airplanes");
                });
#pragma warning restore 612, 618
        }
    }
}
